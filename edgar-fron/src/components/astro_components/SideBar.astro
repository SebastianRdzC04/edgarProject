---
// Sidebar.astro
const currentPath = Astro.url.pathname;
const apiUrl = import.meta.env.PUBLIC_API_URL;
---

<aside class="h-[calc(100vh-64px)] w-56 bg-white shadow-lg fixed left-0 top-16 z-10 border-r border-gray-200">
    <div class="flex flex-col h-full">
        <div class="p-4 border-b border-gray-200">
            <h2 class="text-lg font-bold text-gray-800">Panel de Control</h2>
            <p class="text-xs text-gray-500 mt-1">Gestión y administración</p>
        </div>

        <!-- Navigation Menu -->
        <nav class="flex-1 overflow-y-auto py-4">
            <ul class="space-y-1 px-3">
                <li>
                    <a href="/home" class={`flex items-center p-3 rounded-lg transition-colors group ${currentPath === '/home' ? 'bg-gray-800 text-white' : 'text-gray-800 hover:bg-gray-100'}`}>
                        <svg xmlns="http://www.w3.org/2000/svg" class={`h-5 w-5 mr-3 ${currentPath === '/home' ? 'text-white' : 'text-gray-600 group-hover:text-black'}`} fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                        </svg>
                        <span class="font-medium">Inicio</span>
                    </a>
                </li>
                <li>
                    <a href="/users" class={`flex items-center p-3 rounded-lg transition-colors group ${currentPath === '/users' ? 'bg-gray-800 text-white' : 'text-gray-800 hover:bg-gray-100'}`}>
                        <svg xmlns="http://www.w3.org/2000/svg" class={`h-5 w-5 mr-3 ${currentPath === '/users' ? 'text-white' : 'text-gray-600 group-hover:text-black'}`} fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                        <span class="font-medium">Clientes</span>
                    </a>
                </li>
                <li>
                    <a href="/quotes" class={`flex items-center p-3 rounded-lg transition-colors group ${currentPath === '/quotes' ? 'bg-gray-800 text-white' : 'text-gray-800 hover:bg-gray-100'}`}>
                        <svg xmlns="http://www.w3.org/2000/svg" class={`h-5 w-5 mr-3 ${currentPath === '/quotes' ? 'text-white' : 'text-gray-600 group-hover:text-black'}`} fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                        <span class="font-medium">Cotizaciones</span>
                    </a>
                </li>
                <li>
                    <a href="/materials" class={`flex items-center p-3 rounded-lg transition-colors group ${currentPath === '/materials' ? 'bg-gray-800 text-white' : 'text-gray-800 hover:bg-gray-100'}`}>
                        <svg xmlns="http://www.w3.org/2000/svg" class={`h-5 w-5 mr-3 ${currentPath === '/materials' ? 'text-white' : 'text-gray-600 group-hover:text-black'}`} fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                        </svg>
                        <span class="font-medium">Materiales</span>
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Footer -->
        <div class="p-4 border-t border-gray-200 bg-gray-50">
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <div class="h-9 w-9 rounded-full bg-gray-800 text-white flex items-center justify-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p id="username" class="text-sm font-medium text-gray-800">Cargando...</p>
                        <p id="email" class="text-xs text-gray-500">Cargando...</p>
                    </div>
                </div>
                <button id="logout-button" class="p-2 text-gray-600 hover:text-red-500 rounded-full hover:bg-gray-200 transition-colors" title="Cerrar sesión">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                    </svg>
                </button>
            </div>
        </div>
    </div>
</aside>

<script define:vars={{apiUrl}}>
    document.addEventListener('DOMContentLoaded', async () => {
        const usernameElement = document.getElementById('username');
        const emailElement = document.getElementById('email');
        const logoutButton = document.getElementById('logout-button');
        
        // Fetch user data from API
        try {
            const response = await fetch(`${apiUrl}/users/me`, {
                method: 'GET',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json',
                },
            });
            
            if (response.ok) {
                const userData = await response.json();
                const username = userData.username || 'Usuario';
                const email = userData.email || 'usuario@ejemplo.com';

                if (usernameElement) {
                    usernameElement.textContent = username;
                }

                if (emailElement) {
                    emailElement.textContent = email;
                }
            } else {
                // If not authenticated, redirect to login
                window.location.href = '/authenticate';
            }
        } catch (error) {
            console.error('Error fetching user data:', error);
            // Redirect to login on error
            window.location.href = '/authenticate';
        }
        
        // Handle logout
        if (logoutButton) {
            logoutButton.addEventListener('click', async () => {
                try {
                    const response = await fetch(`${apiUrl}/auth/logout`, {
                        method: 'POST',
                        credentials: 'include',
                    });
                    
                    if (response.ok) {
                        window.location.href = '/';
                    } else {
                        console.error('Error al cerrar sesión');
                    }
                } catch (error) {
                    console.error('Error al cerrar sesión:', error);
                }
            });
        }
    });
</script>